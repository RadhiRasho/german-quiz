name: Go

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.22'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

    - name: Lint
      run: go fmt ./... && go vet ./...

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.22'

    - name: Build for all platforms
      run: |
        GOOS=linux GOARCH=amd64 go build -o german-linux-amd64
        GOOS=windows GOARCH=amd64 go build -o german-windows-amd64.exe
        GOOS=darwin GOARCH=amd64 go build -o german-darwin-amd64

    - name: Generate random string
      id: random_string
      run: echo "branch=$(date +%s | sha256sum | base64 | head -c 5 ; echo)" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.random_string.outputs }}
        release_name: Release ${{ steps.random_string.outputs }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./german-linux-amd64
        asset_name: german-linux-amd64
        asset_content_type: application/octet-stream

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./german-windows-amd64.exe
        asset_name: german-windows-amd64.exe
        asset_content_type: application/octet-stream

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./german-darwin-amd64
        asset_name: german-darwin-amd64
        asset_content_type: application/octet-stream